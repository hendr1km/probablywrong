[
  {
    "objectID": "posts/bayesian_intro/bayes.html",
    "href": "posts/bayesian_intro/bayes.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/bayesian_intro/bayes.html#merriweather",
    "href": "posts/bayesian_intro/bayes.html#merriweather",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "posts/bayesian_intro/bayes.html#columns",
    "href": "posts/bayesian_intro/bayes.html#columns",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "posts/bayesian_intro/bayes.html#margin-captions",
    "href": "posts/bayesian_intro/bayes.html#margin-captions",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "Hey, I’m Hendrik. Currently in my master’s studies in primary education, I also work as a Research Assistant in Clinical Child and Adolescent Psychology and Psychotherapy at the University of Wuppertal. This blog is my space to share everything that fascinates me about R and quantitative research methods"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Hendriks Scripts",
    "section": "",
    "text": "This is a dummy blog posts\n\n\n\n\n\n\n\n123\n\n\nSecond Tag\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2023\n\n\n\n\n\n\n  \n\n\n\n\nIntro to Baysian Modelling\n\n\n\n\n\n\n\nR\n\n\nBaysian\n\n\nmodels\n\n\n\n\nIn this post I will Introduce Baysian modelling. We will model the relationship between reading scores and math scores by using the PISA data from 2018. You dont need to be familiar with bayesian statistics for this Tutorial. A basic understanding of linear regression should be enough.\n\n\n\n\n\n\nJan 6, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/bayesian_intro/bayes_intro.html",
    "href": "posts/bayesian_intro/bayes_intro.html",
    "title": "Intro to Baysian Modelling",
    "section": "",
    "text": "Post Overview\nIn the first part of this Post, I will give a general introduction to the baysian approach to data anlysis with all its pros and downsides.\nAfterwards we will take those concepts and apply them in order to build a linear regression that models the relationship between German students reading and math scores.\nThose are contained in the PISA 2018 data, which we will access using the learningtower package. Although the 2022 data has just been released, there is yet no package that contains a subset of this data - for easier reproducebility we will therefore use the 2018 subset.\n\n\nTools\nI will do the analysis using the tidyverse and brms, as well as tidybayes. brms is a great package for baysian moddelling that gives an interface similar to the one of lme4 (which is well known for its multilevel model capabilites). tidybayes allows us to visualise those models by using ggplot.\nBefore we can start, we need download the necessary data and packages. the pisa_raw data file contains the subset of the 2018 PISA data from learningtower. Using some dplyr verbs we reduce the data to one of the german students and slice a small sample of 30 students.\n\nlibrary(tidyverse)\nlibrary(brms)\nlibrary(tidybayes)\nlibrary(learningtower) # PISA 2018 data\n\npisa_raw &lt;- load_student(\"2018\")\n\npisa_ger &lt;- pisa_raw %&gt;%\n filter(country %in% \"DEU\") %&gt;%\n select(read, math) %&gt;%\n slice_sample(n = 30)\n\n\n\nThinking Baysian\nWhy did I opt for such a compact sample size? This is precisely where Bayesian models excel, and I’ll explain why.\nBayesians are not fans of point estimates. Rather, they find limited value in them, as they perceive the world replete with uncertainty. To them, choosing a specific point as your estimate suggests a stark dichotomy: you’re either spot on or significantly off the mark. But, if you consider a distribution of plausible values, your guess can be much more informed and nuanced.\nThis approach is especially useful in scenarios with small datasets. When data is sparse, making accurate predictions from a single value is often challenging.\nConsider, for example, determining the average reading score of all German students based on our sample of just 30. Techniques like bootstrapping might help us better understand our sample’s distribution, but a significant caveat remains: our sample doesnt represent the pupulation. This might be caused through only sampling from a specific school district or just having an unrepresentative sample by chance. Therein lies the risk of being misled by such a limited dataset.\nBayesian Statistics allows us to adjust how much value we give to the data. By defining our prior assumptions we can decide how much we trust our data and incorperate prior knowledge and beliefs.\nIn the case of a the reading test scores we might be define a prior using a normal distribution. Why normal? - thats my assumption you could defenetly argue for another one. Maybe one with thicker tails as the tales of the normal distribution are really thin. But the normal distribution is really simple and can be fully described by the mean and standard deviation.\nIf we set a prior for the reading test scores we might know from the OECD Website that the scores tend to be centered around 500 with a standard deviation of 100.\nSuch a prior would look like this:\n![Elephant](profile2.PNG){width=300}\n\nm &lt;- brm(read ~ 1,\n         prior = c(prior(normal(200, 20), class = Intercept),\n                   prior(normal(20, 10), class = sigma)),\n         data = pisa_ger,\n         iter = 4000, warmup = 1000, chains = 4, cores = 4,\n         seed = 4,\n         sample_prior = TRUE)\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Users/hendrikm/Library/R/arm64/4.2/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppParallel/include/\"  -I\"/Users/hendrikm/Library/R/arm64/4.2/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DUSE_STANC3 -DSTRICT_R_HEADERS  -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -c foo.c -o foo.o\nIn file included from &lt;built-in&gt;:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from &lt;built-in&gt;:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include &lt;complex&gt;\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\ndraws_mcmc &lt;- m %&gt;%\n spread_draws(b_Intercept, sigma, prior_sigma, prior_Intercept,\n              ndraws = 10)\n\ntibble(grid = seq(0,900, by = .1),\n       prior = dnorm(grid,\n                     median(draws_mcmc$prior_Intercept),\n                     median(draws_mcmc$prior_sigma)),\n       likelihood = dnorm(grid, median(pisa_ger$read),\n                          sd(pisa_ger$read)),\n       posterior = dnorm(grid,\n                         median(draws_mcmc$b_Intercept),\n                         median(draws_mcmc$sigma))\n       ) %&gt;%\n pivot_longer(2:4, names_to = \"type\", values_to = \"plausibility\") %&gt;%\n mutate(type = as.factor(type)) %&gt;%\n # filter(type %in% c(\"prior\", \"likelihood\", \"posterior\")) %&gt;%\n ggplot(aes(y =  plausibility, x = grid, fill = type))+\n geom_area(position = \"identity\", alpha = .7)+\n xlab(\"PISA 2018 Read Score of German Students\")+\n xlim(0,1000)+\n theme_minimal()+\n theme(\n  strip.text.x = element_text(family = \"Roboto\", size = 10, face = \"bold\", color = \"black\"),\n  axis.line = element_line(colour = \"#808080\", linewidth = .3),\n  axis.text.x = element_text(family = \"Roboto\", size = 8, color = \"#808080\"),\n  axis.title.x = element_text(family = \"Roboto\", size = 8, color = \"#808080\"),\n  axis.text.y = element_blank(),\n  text = element_text(family = \"Roboto\", size = 10, color = \"#808080\"),\n  legend.title = element_text(family = \"Roboto\", size = 10, color = \"#808080\"),\n  legend.text = element_text(family = \"Roboto\", size = 10, color = \"#808080\"),\n  panel.grid.major.x = element_line(color = \"#bfbfbf\",\n                                    linewidth = .1),\n  panel.grid.minor.x = element_blank(),\n  panel.grid.minor.y = element_blank(),\n  panel.grid.major.y = element_blank(),\n  panel.background = element_blank(),\n  panel.border = element_blank(),\n  axis.line.x = element_line(size = .5, linetype = \"solid\", colour = \"#bfbfbf\"),\n  axis.line.y = element_blank()\n )+\n scale_fill_manual(values = c(\"prior\" = \"#ee8577\",\n                              \"likelihood\" = \"#ffbb44\",\n                              \"posterior\" = \"#859b6c\"))"
  }
]